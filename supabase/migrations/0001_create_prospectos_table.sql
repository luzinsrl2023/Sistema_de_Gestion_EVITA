-- 1. Crear un tipo ENUM para los estados de los prospectos.
-- Esto ayuda a mantener la consistencia de los datos.
CREATE TYPE prospecto_estado AS ENUM (
    'Nuevo',
    'Contactado',
    'Calificado',
    'Propuesta Enviada',
    'Negociación',
    'Ganado',
    'Perdido'
);

-- 2. Crear la tabla "prospectos".
CREATE TABLE public.prospectos (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    nombre TEXT NOT NULL,
    empresa TEXT,
    email TEXT,
    telefono TEXT,
    fuente TEXT, -- Ej: 'Referencia', 'Web', 'Evento'
    estado prospecto_estado DEFAULT 'Nuevo'::prospecto_estado,
    responsable_id UUID REFERENCES auth.users(id) DEFAULT auth.uid() NOT NULL,

    -- Constraints para asegurar la calidad de los datos
    CONSTRAINT email_format CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$')
);

-- 3. Añadir comentarios en la tabla y columnas para mayor claridad.
COMMENT ON TABLE public.prospectos IS 'Almacena los prospectos o leads de negocio.';
COMMENT ON COLUMN public.prospectos.responsable_id IS 'El usuario asignado como responsable del prospecto.';

-- 4. Habilitar Row Level Security (RLS) en la tabla.
-- ¡IMPORTANTE! Esto asegura que las políticas de acceso se apliquen.
ALTER TABLE public.prospectos ENABLE ROW LEVEL SECURITY;

-- 5. Crear las Políticas de RLS.
-- Política 1: Los usuarios pueden ver únicamente los prospectos que tienen asignados.
CREATE POLICY "Los usuarios pueden ver sus propios prospectos."
ON public.prospectos FOR SELECT
USING (auth.uid() = responsable_id);

-- Política 2: Los usuarios pueden crear nuevos prospectos para sí mismos.
-- El `DEFAULT auth.uid()` en la columna `responsable_id` se encarga de la asignación.
CREATE POLICY "Los usuarios pueden crear prospectos."
ON public.prospectos FOR INSERT
WITH CHECK (auth.uid() = responsable_id);

-- Política 3: Los usuarios pueden actualizar sus propios prospectos.
CREATE POLICY "Los usuarios pueden actualizar sus propios prospectos."
ON public.prospectos FOR UPDATE
USING (auth.uid() = responsable_id);

-- Política 4: Los usuarios pueden eliminar sus propios prospectos.
CREATE POLICY "Los usuarios pueden eliminar sus propios prospectos."
ON public.prospectos FOR DELETE
USING (auth.uid() = responsable_id);